import { EventTargetInterruptSource } from './eventtargetinterruptsource';
/*
 * An interrupt source that uses events on the document element (html tag).
 */
export class DocumentInterruptSource extends EventTargetInterruptSource {
    constructor(events, options) {
        super(document.documentElement, events, options);
    }
    /*
     * Checks to see if the event should be filtered.
     * @param event - The original event object.
     * @return True if the event should be filtered (don't cause an interrupt); otherwise, false.
     */
    filterEvent(event) {
        // some browser bad input hacks
        if (event.type === 'mousemove' &&
            // fix for Chrome destop notifications
            ((event.originalEvent &&
                event.originalEvent.movementX === 0 &&
                event.originalEvent.movementY === 0) ||
                // fix for webkit fake mousemove
                ((event.movementX !== void 0 && !event.movementX) || !event.movementY))) {
            return true;
        }
        return false;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9jdW1lbnRpbnRlcnJ1cHRzb3VyY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctaWRsZS9jb3JlLyIsInNvdXJjZXMiOlsibGliL2RvY3VtZW50aW50ZXJydXB0c291cmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCwwQkFBMEIsRUFDM0IsTUFBTSw4QkFBOEIsQ0FBQztBQUV0Qzs7R0FFRztBQUNILE1BQU0sT0FBTyx1QkFBd0IsU0FBUSwwQkFBMEI7SUFDckUsWUFBWSxNQUFjLEVBQUUsT0FBOEM7UUFDeEUsS0FBSyxDQUFDLFFBQVEsQ0FBQyxlQUFlLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsV0FBVyxDQUFDLEtBQVU7UUFDcEIsK0JBQStCO1FBQy9CLElBQ0UsS0FBSyxDQUFDLElBQUksS0FBSyxXQUFXO1lBQzFCLHNDQUFzQztZQUN0QyxDQUFDLENBQUMsS0FBSyxDQUFDLGFBQWE7Z0JBQ25CLEtBQUssQ0FBQyxhQUFhLENBQUMsU0FBUyxLQUFLLENBQUM7Z0JBQ25DLEtBQUssQ0FBQyxhQUFhLENBQUMsU0FBUyxLQUFLLENBQUMsQ0FBQztnQkFDcEMsZ0NBQWdDO2dCQUNoQyxDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVMsS0FBSyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUN6RTtZQUNBLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEV2ZW50VGFyZ2V0SW50ZXJydXB0T3B0aW9ucyxcbiAgRXZlbnRUYXJnZXRJbnRlcnJ1cHRTb3VyY2Vcbn0gZnJvbSAnLi9ldmVudHRhcmdldGludGVycnVwdHNvdXJjZSc7XG5cbi8qXG4gKiBBbiBpbnRlcnJ1cHQgc291cmNlIHRoYXQgdXNlcyBldmVudHMgb24gdGhlIGRvY3VtZW50IGVsZW1lbnQgKGh0bWwgdGFnKS5cbiAqL1xuZXhwb3J0IGNsYXNzIERvY3VtZW50SW50ZXJydXB0U291cmNlIGV4dGVuZHMgRXZlbnRUYXJnZXRJbnRlcnJ1cHRTb3VyY2Uge1xuICBjb25zdHJ1Y3RvcihldmVudHM6IHN0cmluZywgb3B0aW9ucz86IG51bWJlciB8IEV2ZW50VGFyZ2V0SW50ZXJydXB0T3B0aW9ucykge1xuICAgIHN1cGVyKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgZXZlbnRzLCBvcHRpb25zKTtcbiAgfVxuXG4gIC8qXG4gICAqIENoZWNrcyB0byBzZWUgaWYgdGhlIGV2ZW50IHNob3VsZCBiZSBmaWx0ZXJlZC5cbiAgICogQHBhcmFtIGV2ZW50IC0gVGhlIG9yaWdpbmFsIGV2ZW50IG9iamVjdC5cbiAgICogQHJldHVybiBUcnVlIGlmIHRoZSBldmVudCBzaG91bGQgYmUgZmlsdGVyZWQgKGRvbid0IGNhdXNlIGFuIGludGVycnVwdCk7IG90aGVyd2lzZSwgZmFsc2UuXG4gICAqL1xuICBmaWx0ZXJFdmVudChldmVudDogYW55KTogYm9vbGVhbiB7XG4gICAgLy8gc29tZSBicm93c2VyIGJhZCBpbnB1dCBoYWNrc1xuICAgIGlmIChcbiAgICAgIGV2ZW50LnR5cGUgPT09ICdtb3VzZW1vdmUnICYmXG4gICAgICAvLyBmaXggZm9yIENocm9tZSBkZXN0b3Agbm90aWZpY2F0aW9uc1xuICAgICAgKChldmVudC5vcmlnaW5hbEV2ZW50ICYmXG4gICAgICAgIGV2ZW50Lm9yaWdpbmFsRXZlbnQubW92ZW1lbnRYID09PSAwICYmXG4gICAgICAgIGV2ZW50Lm9yaWdpbmFsRXZlbnQubW92ZW1lbnRZID09PSAwKSB8fFxuICAgICAgICAvLyBmaXggZm9yIHdlYmtpdCBmYWtlIG1vdXNlbW92ZVxuICAgICAgICAoKGV2ZW50Lm1vdmVtZW50WCAhPT0gdm9pZCAwICYmICFldmVudC5tb3ZlbWVudFgpIHx8ICFldmVudC5tb3ZlbWVudFkpKVxuICAgICkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iXX0=